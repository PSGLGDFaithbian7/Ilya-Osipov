#!/usr/bin/env tclsh

##检查
if {![file exists ./work]}  {
    file mkdir ./work
}

if {![file exists ./setup]} {
    error "missing ./setup directory"
}

if {![file exists ./setup/library.lst]} {
    error "missing ./setup/library.lst"
}

set DATE [exec date "+%Y%m%d_%H%M"]

proc unique {BeforeUni} {
    array unset uniarr
    set AfterUni {}
    foreach e $BeforeUni {
        if {![info exists uniarr($e)]} {
            lappend AfterUni $e
            set uniarr($e) 1
        }
    }
    return $AfterUni
}

##读入文件
set fileToRead  [open ./setup/library.lst r]
set fileToWrite [open ./work/script.tcl w]



##开始正则匹配,收集所有的库配置
set search_path {}
set library_file {}
set link_file {}
set symbolLibraries {}
set syntheticLibraries {}
set top_module ""  ;# 空的变量赋“”

while {[gets $fileToRead line] >= 0} {
    # 去掉 # 注释及两端空白
    set line [string trim [lindex [split $line "#"] 0]]

    if {[regexp {^LibraryPath:\s(\S+)$} $line _ LibraryPath]} {
        set LibraryPath [string trim $LibraryPath]
        lappend search_path $LibraryPath
        continue
    }

    if {[regexp {^LibraryFile:\s(\S+)$} $line _ LibraryFile]} {
        set LibraryFile [string trim $LibraryFile]
        lappend library_file $LibraryFile
        continue
    }

    if {[regexp {^LinkLibraryFile:\s(\S+)$} $line _ LinkFile]} {
        set LinkFile [string trim $LinkFile]
        lappend link_file $LinkFile
        continue
    }

    if {[regexp {^SymbolLibrary:\s+(\S+)$} $line _ sdbRaw]} {
        set sdb [string trim $sdbRaw]
        lappend symbolLibraries $sdb
        continue
    }

    if {[regexp {^SyntheticLibrary:\s+(\S+)$} $line _ sldbRaw]} {
        set sldb [string trim $sldbRaw]
        lappend syntheticLibraries $sldb
        continue
    }

    if {[regexp {^TopModule:\s(\S+)$} $line _ TopModule]} {
        set top_module $TopModule
        continue
    }
}

##检查重复
set search_path        [unique $search_path]
set library_file       [unique $library_file]
set link_file          [unique $link_file]
set symbolLibraries    [unique $symbolLibraries]
set syntheticLibraries [unique $syntheticLibraries]

##开始写入
puts $fileToWrite "# Auto-generated by Tcl Script"
puts $fileToWrite [format "# Generated at %s" [clock format [clock seconds] -format {%Y-%m-%d %H:%M:%S}]]
puts $fileToWrite ""
puts $fileToWrite "######### Set Library (for dc_shell -t) ###########"
puts $fileToWrite "set_host_options -max_cores 16"

puts $fileToWrite "set_svf  ../output/${top_module}_${DATE}.svf"


if {[llength $search_path] > 0} {
    puts $fileToWrite "set_app_var search_path [list {*}$search_path]"
}
if {[llength $library_file] > 0} {
    puts $fileToWrite "set_app_var target_library [list {*}$library_file]"
}
if {[llength $library_file] > 0 || [llength $link_file] > 0} {
    # Design Compiler 常见写法：link_library 以 * 开头
    puts $fileToWrite "set_app_var link_library [list * {*}$library_file {*}$link_file]"
}
if {[llength $symbolLibraries] > 0} {
    puts $fileToWrite "set_app_var symbol_library [list {*}$symbolLibraries]"
}
if {[llength $syntheticLibraries] > 0} {
    puts $fileToWrite "set_app_var synthetic_library [list {*}$syntheticLibraries]"
}

close $fileToWrite
close $fileToRead
