# Auto-generated by Tcl Script
# Generated at 2025-09-04 12:07:53
######### Set Library (for dc_shell -t) ###########
remove_design -all
set_host_options -max_cores 16
set_svf  ../output/RISC_CORE_20250904_1207.svf
set_app_var search_path "/eda/libs/std_cell/tsmc_90nm/"
set_app_var target_library "/path/to/project/lib/tcbn90ghp.db"
set_app_var link_library "* /path/to/project/lib/tcbn90ghp.db tcbn90ghp.db generic.sdb dw_foundation.sldb"
set_app_var symbol_library "generic.sdb"
set_app_var synthetic_library "dw_foundation.sldb"

######### Read Design (for dc_shell -t) ###########
define_design_lib WORK -path ./work

analyze -format sverilog -vcs "+incdir+./rtl/includes" -define {SYNTHESIS VENDOR_A} [list rtl/core/cpu.v]
analyze -format sverilog -vcs "+incdir+./rtl/includes" -define {SYNTHESIS VENDOR_A} [list rtl/peripheral/uart.sv]
analyze -format sverilog -vcs "+incdir+./rtl/includes" -define {SYNTHESIS VENDOR_A} [list rtl/top/RISC_CORE.v]

elaborate [list RISC_CORE]
current_design [list RISC_CORE]
link
uniquify -force
set cd_status [redirect ./report/report.check_rtl {check_design}]
if {$cd_status != 0} {
    puts "Check Design Error!"
    exit
} else {
    puts "Check Design Pass!"
}

# ----------- Use for MultiVoltage Design -----------
# set auto_insert_level_shifters_on_clocks all
# set auto_insert_level_shifters_on_nets all
#--------area power suggest dont---------
# set_dont_use [get_lib_cells */LAP2UM]

write_file -format ddc -hierarchy -output [list ../output/RISC_CORE_20250904_1207_link.ddc]

######## Outside CLOCK (top port) ########
remove_driving_cell [get_ports i_clk_sys]
set_drive 0 [get_ports i_clk_sys]
create_clock -name clk_sys -period 10.0 -waveform {0.0 5.0} [get_ports i_clk_sys]
set_ideal_network -no_propagate [get_ports i_clk_sys]
set_clock_uncertainty -setup 0.5 [get_clocks clk_sys]
set_clock_uncertainty -hold  0.125  [get_clocks clk_sys]
set_clock_latency -source -min 0.2 -max 1.0 [get_clocks clk_sys]
set_clock_latency         -min 0.2 -max 1.0 [get_clocks clk_sys]
set_clock_transition -min 0.1 -max 0.2 [get_clocks clk_sys]

######## Outside CLOCK (top port) ########
remove_driving_cell [get_ports i_clk_uart]
set_drive 0 [get_ports i_clk_uart]
create_clock -name clk_uart -period 20.0 -waveform {0.0 10.0} [get_ports i_clk_uart]
set_ideal_network -no_propagate [get_ports i_clk_uart]
set_clock_uncertainty -setup 1.0 [get_clocks clk_uart]
set_clock_uncertainty -hold  0.25  [get_clocks clk_uart]
set_clock_latency -source -min 0.4 -max 2.0 [get_clocks clk_uart]
set_clock_latency         -min 0.4 -max 2.0 [get_clocks clk_uart]
set_clock_transition -min 0.2 -max 0.4 [get_clocks clk_uart]

######## ASYNC CLOCKS FALSE_PATH ########
set_false_path -from [get_clocks clk_sys] -to [get_clocks clk_uart]
set_false_path -from [get_clocks clk_uart] -to [get_clocks clk_sys]

######### Set Reset (for dc_shell -t) ###########
set_dont_touch_network    [get_ports {i_rst_n}]
set_false_path -from      [get_ports {i_rst_n}]
set_ideal_network         [get_ports {i_rst_n}]
set_drive 0               [get_ports {i_rst_n}]

######### Set I/O Delays & Environment ###########
set_input_delay 4.0 -max -clock [get_clocks clk_sys] [get_ports i_data*]
set_input_delay 0.5 -min -clock [get_clocks clk_sys] [get_ports i_data*]
set_output_delay 3.5 -max -clock [get_clocks clk_sys] [get_ports o_data*]
set_output_delay 0.2 -min -clock [get_clocks clk_sys] [get_ports o_data*]
set_input_delay 4.5 -max -clock [get_clocks clk_sys] [remove_from_collection [all_inputs] [get_ports {i_clk_sys i_clk_uart}]]
set_output_delay 4.5 -max -clock [get_clocks clk_sys] [all_outputs]

# Output load (pF)
set_load 5 [all_outputs]

# High-fanout modeling
set_app_var high_fanout_net_threshold 60

# Wire-load model selection
set_wire_load_mode "segmented"
set_wire_load_selection "WireAreaLowkCon"

# Operating conditions 
set_operating_conditions -max WCCOM -max_library tcbn90ghp_wc

#============================================================================#
#                                Synthesize                                   #
#============================================================================#
# Prevent assignment statements in the Verilog netlist.
set_fix_multiple_port_nets -feedthrough
set_fix_multiple_port_nets -all -buffer_constants

# Power optimization settings
set_leakage_optimization true
set_dynamic_optimization true

# DesignWare settings
set_app_var dw_prefer_mc_inside true

# Area constraint (0 means optimize for timing)
set_max_area 0

# Structuring and mapping effort
set_flatten false
set_structure true -timing true -boolean false
# Final check before compiling
set cd_status [redirect ./report/report.check_beforecompile {check_design}]
if {$cd_status != 0} {
    puts "Check Design Error before compile!"
    exit
} else {
    puts "Check Design Pass before compile!"
}

#********************Compile*******************}
compile_ultra -no_autoungroup -no_seq_output_inversion -no_boundary_optimization

######### Post-Compile Checks & Outputs #########
change_name -rules sverilog -hierarchy

######### Multi-Voltage Checks #########
redirect -file ../report/RISC_CORE_20250904_1207_check_mv.rpt {check_mv_design}
redirect -file ../report/RISC_CORE_20250904_1207_check_mv_verbose.rpt {check_mv_design -verbose}

######### File Outputs #########
write -format verilog -hierarchy -output ../output/RISC_CORE_20250904_1207.v
write_sdc ../output/RISC_CORE_20250904_1207.sdc
write_file -format ddc -hierarchy -output ../output/RISC_CORE_20250904_1207_compile.ddc
write_sdf ../output/RISC_CORE_20250904_1207.sdf
write_parasitics -format spf -output ../output/RISC_CORE_20250904_1207.spf
write_parasitics -format spef -output ../output/RISC_CORE_20250904_1207.spef
set_svf -off

######## Synthesis Reports ########
redirect -file ../report/RISC_CORE_20250904_1207_report.timing {check_timing}
redirect -file ../report/RISC_CORE_20250904_1207_report.paths.max {report_timing -path end -delay max -max_paths 200 -nworst 2 -nosplit}
redirect -file ../report/RISC_CORE_20250904_1207_report.paths.min {report_timing -path end -delay min -max_paths 200 -nworst 2 -nosplit}
redirect -file ../report/RISC_CORE_20250904_1207_report.full_paths.max {report_timing -path full -input_pins -nets -transition_time -capacitance -attributes -delay max -max_paths 5 -nworst 2 -nosplit}
redirect -file ../report/RISC_CORE_20250904_1207_report.full_paths.min {report_timing -path full -input_pins -nets -transition_time -capacitance -attributes -delay min -max_paths 5 -nworst 2 -nosplit}
redirect -file ../report/RISC_CORE_20250904_1207_report.constraint_violators {report_constraints -all_violators -verbose -nosplit}
redirect -file ../report/RISC_CORE_20250904_1207_report.qor {report_qor -nosplit}
redirect -file ../report/RISC_CORE_20250904_1207_report.area {report_area -hierarchy -nosplit}
redirect -file ../report/RISC_CORE_20250904_1207_report.power {report_power -hierarchy -nosplit}
redirect -file ../report/RISC_CORE_20250904_1207_report.clock_gating {report_clock_gating -structure -verbose -nosplit}